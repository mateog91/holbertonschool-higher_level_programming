The '''2-matrix_divided''' module
== == == == == == == == == == == == == == =
Using '''matrix_divided'''
-----------------------------------
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

testing correct output for integers
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

testing division by zero
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero

testing divisor is int or float
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 5j)
Traceback (most recent call last):
    ...
    raise TypeError("div must be a number")
TypeError: div must be a number

testing error for empty list
>>> matrix_divided([], 3)
Traceback (most recent call last):
    ...
    raise ValueError(
ValueError: matrix must be a matrix (list of lists) of integers/floats

testing error output for rows not being lists
>>> matrix_divided([[1, 2],"Ho"], 3)
Traceback (most recent call last):
    ...
    raise TypeError(
TypeError: matrix must be a matrix (list of lists) of integers/floats

testing all rows have same length
>>> matrix_divided([[1, 2],[4, 5, 6]], 3)
Traceback (most recent call last):
...
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size


